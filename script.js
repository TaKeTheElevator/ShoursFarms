const tg = window.Telegram.WebApp;

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –æ–± –∞–∫–∫–∞—É–Ω—Ç–∞—Ö
const accounts = ["Main", "main2", "main3", "main4", "bot1"];

// –î–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ
let currentAccount = null;

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
document.addEventListener("DOMContentLoaded", function () {
  if (localStorage.getItem('theme') === 'dark') {
    document.body.classList.add('dark-mode');
    document.getElementById('theme-toggle').innerHTML = 'üåô';
  } else {
    document.body.classList.remove('dark-mode');
    document.getElementById('theme-toggle').innerHTML = 'üåû';
  }
  displayAccounts();
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
function displayAccounts() {
  const accountsContainer = document.getElementById("accounts");
  accountsContainer.innerHTML = ''; // –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã

  accounts.forEach(account => {
    const accountDiv = document.createElement('div');
    accountDiv.classList.add('account');
    accountDiv.innerHTML = `
      <div class="account-item">
        <img src="https://avatars.akamai.steamstatic.com/${account}_full.jpg" alt="${account}" class="avatar" />
        <button onclick="showBotInfo('${account}')">${account}</button>
      </div>
    `;
    accountsContainer.appendChild(accountDiv);
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
async function showBotInfo(account) {
  currentAccount = account;
  document.getElementById('accounts').style.display = 'none';
  document.getElementById('bot-info').style.display = 'block';

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
  const botData = await getBotData(account);

  const avatarUrl = `https://avatars.akamai.steamstatic.com/${botData.AvatarHash}_full.jpg`;
  const statusText = botData.KeepRunning ? "üü¢ –û–Ω–ª–∞–π–Ω" : "üî¥ –û—Ñ—Ñ–ª–∞–π–Ω";
  const balance = botData.WalletBalance;
  const games = botData.BotConfig.GamesPlayedWhileIdle.join(", ") || "–ù–µ—Ç –∏–≥—Ä";

  document.getElementById('avatar').src = avatarUrl;
  document.getElementById('status').innerText = `–°—Ç–∞—Ç—É—Å: ${statusText}`;
  document.getElementById('nickname').innerText = `–ù–∏–∫: ${botData.Nickname}`;
  document.getElementById('gameInfo').innerText = `–ò–≥—Ä—ã: ${games}`;
  document.getElementById('playtime').innerText = `–ë–∞–ª–∞–Ω—Å: ${balance}`;

  const statusIndicator = document.getElementById("statusIndicator");
  statusIndicator.classList.remove('offline', 'online');
  statusIndicator.classList.add(botData.KeepRunning ? 'online' : 'offline');

  // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–æ–∫
  document.getElementById('startButton').onclick = () => toggleBotStatus(account, true);
  document.getElementById('stopButton').onclick = () => toggleBotStatus(account, false);
  document.getElementById('changeStatusButton').onclick = () => changeStatus(account);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
async function getBotData(account) {
  const response = await fetch(`http://46.8.21.39:1242/Api/Bot/${account}`);
  const data = await response.json();
  return data.Result[account];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
async function toggleBotStatus(account, start) {
  const response = await fetch(`http://46.8.21.39:1242/Api/Bot/${account}/${start ? 'Start' : 'Stop'}`, {
    method: 'POST',
    headers: {
      'Authorization': 'Basic 102030'
    }
  });
  const data = await response.json();
  alert(`–ë–æ—Ç ${start ? '–≤–∫–ª—é—á–µ–Ω' : '–≤—ã–∫–ª—é—á–µ–Ω'}`);
  showBotInfo(account); // –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
async function changeStatus(account) {
  const newStatus = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å—Ç–∞—Ç—É—Å:");
  if (newStatus) {
    const botData = await getBotData(account);
    botData.BotConfig.CustomGamePlayedWhileIdle = newStatus;
    await updateBotConfig(account, botData.BotConfig);
    showBotInfo(account);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞
async function updateBotConfig(account, newConfig) {
  const response = await fetch(`http://46.8.21.39:1242/Api/Bot/${account}`, {
    method: 'POST',
    body: JSON.stringify({ BotConfig: newConfig }),
    headers: { 'Content-Type': 'application/json' },
  });
  const data = await response.json();
}

// –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –∞–∫–∫–∞—É–Ω—Ç–æ–≤
document.getElementById('backToAccountsButton').onclick = function () {
  document.getElementById('accounts').style.display = 'block';
  document.getElementById('bot-info').style.display = 'none';
};

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
document.getElementById('theme-toggle').onclick = function () {
  document.body.classList.toggle('dark-mode');
  document.getElementById('theme-toggle').innerHTML = document.body.classList.contains('dark-mode') ? 'üåû' : 'üåô';
  localStorage.setItem('theme', document.body.classList.contains('dark-mode') ? 'dark' : 'light');
};
